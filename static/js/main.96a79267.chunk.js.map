{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Contact.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","src","alt","style","color","fontFamily","socialLinks","map","item","key","name","url","target","Component","About","Resume","projects","ProjectName","CompanyName","Start","End","Description","Tech","tech","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","MonthOfLeaving","YearOfLeaving","Porfolio","portfolio","concat","imgurl","description","ContactUs","Footer","Roles","skillsDescription","skills","skillname","testimonials","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","Contact_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96a79267.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Hjem</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">Om</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">CV</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Portef√∏lje</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Kontakt</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <img className=\"banner-img\"  src=\"images/avatar.png\" alt=\"\" />\n               <h1 className=\"responsive-headline\">Kristian Ekle.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>\n                Utvikler med erfaring fra roller som Arkitekt og Data Scientist.<br/>\n                Jobber som freelance / selvstendig it-konsulent og kan engasjeres for det aller fleste typer oppdrag innen softwareutvikling.\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n            <p>Ledig for nytt oppdrag fra 01.05.2020</p>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n               <img className=\"profile-pic\"  src=\"images/profile.jpg\" alt=\"\" />\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>Om Kristian</h2>\n               <p>\n               Software- og teknologientusiast fra Trondheim som bor i Oslo.<br/> Har en mastergrad i informatikk med spesialisering i kunstig intelligens fra NTNU Trondheim.\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Kontaktinformasjon</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>Kristian Ekle</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     Oslo, Norge\n                    </span>\n                    <br></br>\n                    <span>kristian.ekle@gmail.com</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n        <div className=\"row projects\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Prosjekter</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.projects && resumeData.projects.map((item) => {\n                return (\n                  <div className=\"row item project\">\n                    <div className=\"twelve columns\">\n                      <h3 className=\"project-title\">{item.ProjectName}</h3>\n                      <p className=\"details\">\n                        <h5>{item.CompanyName}</h5>\n                        <em className=\"date\">{item.Start} <span>&bull;</span> {item.End}</em\n                        ></p>\n                      <p>\n                        {item.Description}\n                      </p>\n                      {item.Tech &&\n                      <div className=\"chips-dus\">\n                        {item.Tech.map((tech) => <div className=\"chip dus\">{tech}</div>)}\n                      </div>\n                      }\n                      {/*item.Roles &&\n                      <div className=\"chips\">\n                        {item.Roles.map((role) => <div className=\"chip\">{role}</div>)}\n                      </div>\n                      */}\n                      \n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n\n        <div className=\"row education\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Utdannelse</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.education && resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                      <p>\n                        {item.Achievements}\n                      </p>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>Arbeid</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.work && resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                      <p>\n                        {item.Achievements}\n                      </p>\n                    </div>\n\n                  </div>\n\n                )\n              })\n            }\n          </div>\n        </div>\n\n\n        {/*}<div className=\"row skill\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Skills</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n\n            <p>\n            {\n              resumeData.projects && resumeData.projects.map(\n                (item) => {item.tech && item.tech.map((t) => {t})}\n              )}\n            }\n            </p>\n\n            <div className=\"bars\">\n\n              <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return (\n                      <li>\n                        <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                        </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n              </ul>\n\n            </div>\n\n          </div>\n\n              </div>*/}\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Et utdrag av tidligere prosjekter.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                      <img src={`${item.imgurl}`} className=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Ta gjerne kontakt p√• epost eller p√• linkedin.\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4><a href=\"https://www.linkedin.com/in/kristian-ekle-3150836b/\">Linkedin</a>\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  \"socialLinks\": [\n    {\n      \"name\": \"linkedin\",\n      \"url\": \"https://www.linkedin.com/in/rahul-bhatia-67ba08121/\",\n      \"className\": \"fa fa-linkedin\"\n    },\n    {\n      \"name\": \"github\",\n      \"url\": \"http://github.com/krekle\",\n      \"className\": \"fa fa-github\"\n    }\n  ],\n  \"projects\": [\n    {\n      \"CompanyName\": \"Avinor\",\n      \"ProjectName\": \"Digitalt Infosenter / InfoKiosk\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['React', 'C#', '.NET Core', 'Azure', 'Azure DevOps', 'GraphQL', 'typescript', 'git'],\n      \"Start\": \"01.10.2019\",\n      \"End\": \"01.05.2020\",\n      \"Description\": \"Avinor er et norsk statlig selskap, og Norges st√∏rste eier av flyplasser. Selskapet driver 44 flyplasser, hvorav 12 eies av Forsvaret. I tillegg eier selskapet sikkerhetsinstallasjoner av ulike slag, deriblant radarer, radiofyr, fjernstyrte basestasjoner for flyradiosambandet, og kontrollsentraler. I 2003 ble Avinor oppf√∏rt som aksjeselskap heleid av staten. Eierskapet forvaltes av Samferdselsdepartementet. Etter hvert som Norge blir et mer og mer popul√¶rt reisem√•l, har det √∏kende antallet turister til Oslo lufthavn hver sommer blitt en stor belastning for de ansatte ved informasjonssenteret i ankomsthallen. Denne trenden fortsetter, blant annet fordi et kinesisk flyselskap √•pner en rute f√∏rste gang direkte fra Beijing til Oslo fra midten av mai. Dette har gjort det n√∏dvendig √• endre informasjonssenteret for √• kunne h√•ndtere flere turister raskere. Etter en innsiktsunders√∏kelse s√• vi at de mest stilte sp√∏rsm√•lene kan l√∏ses digitalt, som kan frigj√∏re tid og senke stressniv√•et for b√•de bes√∏kende og ansatte. Bouvet dannet et team for √• l√∏se disse utfordringene, der f√∏rste fase var √• sette opp en informasjons-kiosk for Oslo Lufthavn. I prosjektets fase 2 rulles l√∏sningen ut p√• andre norske flyplasser. Kristian har v√¶rt med p√• design og utvikling av systemet..\"\n    },\n    {\n      \"CompanyName\": \"Sporveien\",\n      \"ProjectName\": \"Geometritoget\",\n      \"Roles\": ['Utvikler', 'Arkitekt'],\n      \"Tech\": ['C#', 'AWS', 'IoT', 'git', 'Python', 'Tableau', 'AWS Redshift', 'AWS S3', 'AWS Lambda', 'Databricks', 'PySpark', 'Big Data', 'Datavarehus', 'Angular', 'typescript'],\n      \"Start\": \"01.12.2018\",\n      \"End\": \"01.01.2020\",\n      \"Description\": \"Geometritoget er en MX3000 t-banevogn som er utstyrt med over 30 sensorer som m√•ler verdier for blant annet: sporvidde, kurve, vindskjevhet, akselerometer, etc. Toget nyttes som en vanlig t-banevogn som i l√∏pet av en tidsperiode p√• ca 2 uker vil kj√∏re alle tbanenettets linjer mens det samler data om sporgeometrien til sporet. Kristian var ansvarlig for design og implementering av softwarel√∏sningen for dette systemet. Dataen fra toget m√•tte konverteres fra et propriet√¶rt bin√¶rformat som leverand√∏r av sensorer benyttet til noe mer standard som kunne analyseres og visualiseres. Videre m√•tte dataen arkiveres i skyen S3 og DynamoDB og berikes og analyseres f√∏r innsetting i Redshift databarehus, fra hvor den til slutt ble tilgjengeligjort i analyseverkt√∏yet tableua web. Dataen fra geometritoget skal gj√∏re det mulig for de som er ansvarlige for vedlikehold av infrastrukturen i Sporveien √•; se p√• trending av feil, f√• varsel dersom en sensor fanger opp m√•linger som er utenfor terskelverdier, se p√• gjennomsnittlige hastigheter p√• hele skinnenettet. Blant annet.\"\n    },\n    {\n      \"CompanyName\": \"Sporveien\",\n      \"ProjectName\": \"Prediktivt vedlikehold av Sporvekslere\",\n      \"Roles\": ['Utvikler', 'Arkitekt'],\n      \"Tech\": ['Python', 'C#', 'Azure', 'Azure CosmosDB', 'Azure Blobstorage', 'Azure Function', 'Angular', 'typescript', 'git'],\n      \"Start\": \"01.10.2018\",\n      \"End\": \"01.03.2019\",\n      \"Description\": \"Vedlikehold av infrastruktur i drift krever mye penger og tid. √Ö gjennomf√∏re for mange un√∏dvendige vedlikehold koster mye penger - for f√• vedlikehold f√∏rer kostbar svikt av utstyr i operasjon. Det er derfor √∏nskelig med st√∏ttesystemer som kan monitorere utsyr og varsle n√•r vedlikehold er n√∏dvendig. I den forbindelse har Kristian jobbet p√• prosjekt hos Sporveien for √• prototype en l√∏sning som kan visualisere og varsle dersom loggf√∏rte str√∏mtrekk p√• sporvekslinger i t-banenettet er utenom det vanlige. Dette gj√∏res ved √• benytte algoritmer fra signalbehandling og statistikk til √• se p√• kurven til str√∏mtrekket for √• avgj√∏re hvorvidt den representerer en 'frisk' veksling eller ikke. L√∏sningen er laget med Angular7 og Python Flask backend for visualisering og grensesnitt servert fra Azure. Analyse og databehandling gj√∏res i WebJobs, Azure Function, Blob storage og Azure CosmosDB.\"\n    },\n    {\n      \"CompanyName\": \"Sporveien\",\n      \"ProjectName\": \"IVO - Individstyring av Vognparken\",\n      \"Roles\": ['Utvikler', 'Arkitekt'],\n      \"Tech\": ['Python', 'Reinforcement Learning', 'Genetisk Algoritme', 'DEAP', 'Ray', 'Azure DevOps', 'AWS EC2', 'git'],\n      \"Start\": \"01.09.2017\",\n      \"End\": \"01.10.2018\",\n      \"Description\": \"Individstyring av vognparken (IVO) er system for planlegging av ettersyn, fl√•testyring og rangering for t-banevogner i drift og p√• depot for Sporveien. M√•lsetningen med l√∏sningen er √• bedre treffe ettersynsdatoer for √• unng√• tapte penger ved ubrukte kilometer. IVO startet som en del av prosjekt DRIV, som siden oppstarten h√∏sten 2015 har DRIV-prosjektet utviklet flere informasjonsl√∏sninger som benyttes p√• T-banens hovedverksted og oppstillingsplass p√• Ryen. Kort fortalt gir l√∏sningene informasjon om hvor en vogn befinner seg, i hvilken tilstand den er i og hva som skal skje med vogna. DRIV arbeider etter Lean Startup-metodikken med tett brukerdialog og -involvering, hypotesedrevet eksperimentering, iterativ utvikling og evaluering direkte p√• verkstedsgulvet. Prototyping skal sikre h√∏y nytteverdi og god forankring blant ledere og brukere p√• verkstedet, redusere risiko og minimere behovet for store forh√•ndsinvesteringer. IVO (Individstyring av vognparken) er et system som skal bist√• de ansatte p√• sporveien med √• planlegge ettersyn og styre t-banevogner slik at man f√•r bedre kontroll p√• kilometerp√•l√∏pet mellom ettersyn. IVO er et system som best√•r av 2 kjernekomponenter: Verkstedplan Er sansvarlig for √• optimalisere verkstedplanen og gi vogner daglige kilometer-m√•ltall som de m√• kj√∏re for √• treffe verkstedtiden sin. Verkstedplan bruker genetiske algoritmer for √• lage optimale planer. Utviklet i python med rammeverket Deap. Rangering Assistent Bruker data om utg√•ende ruter og innkommende vogner til √• anbefale parkering, forflytning og utkj√∏ring p√• depot slik at vogner treffer sine kilometer m√•ltall og dermed treffer sine oppsatte verkstedtider. Bruker reinforcement learning til √• trene opp modeller. Utviklet i python med rammeverkene tensorflow og ray. Disse komponentene utgj√∏r den operative delen av IVO, i tillegg er det er omkringliggende system best√•ende av integrasjoner mot kildesystemer, api'er som gj√∏r data tilgjengelig for eksterne systemer og en database hvor resultater fra kjernekomponenter blir lagret og kildedata blir beriket ved √• aggregere data fra flere kilder.\"\n    },\n\n    {\n      \"CompanyName\": \"Tine\",\n      \"ProjectName\": \"TineMatsans Chatbot\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['node.js', 'GraphQL', 'Microsoft Bot Framework', 'javascript', 'git'],\n      \"Start\": \"01.08.2017\",\n      \"End\": \"01.09.2017\",\n      \"Description\": \"Det er utviklet og leverte et proof of concept p√• en chatbot til TINE. Chatboten gir middagsforslag basert p√• ingredienser en √∏nsker eller har fra f√∏r. L√∏sningen ble levert p√• Microsoft Bot Framework, slik at vi enkelt kunne integrere med ulike chat klienter som Slack, Skype eller direkte p√• en nettside. Prosjektet var et eksperiment og TINE valgte √• g√• videre med chatbot ideen. \"\n    },\n    {\n      \"CompanyName\": \"Visma\",\n      \"ProjectName\": \"Visma Autopay\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['Java EE', 'JavaServer Faces', 'Angular.js', 'Karma', 'Jasmin', 'Javascript', 'Java', 'Jenkins', 'SVN', 'Selenium'],\n      \"Start\": \"01.06.2015\",\n      \"End\": \"01.06.2017\",\n      \"Description\": \"AutoPay er en helautomatisk betalingstjeneste som tar h√•nd om all inn- og utg√•ende betalinger for et ubegrenset antall kunder. Alle kunder som benytter Visma Business Regnskapsbyra kan benytte Visma AutoPay for automatisk transport av betalingsdata begge veier mellom regnskapsprogram og datamottaker (for eksempel BBS, DnB NOR, Nordea eller Fokus Bank).\"\n    },\n    {\n      \"CompanyName\": \"NTNUi Dans\",\n      \"ProjectName\": \"www.ntnuisdans.no\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['Python', 'Flask', 'javascript', 'SQL Alrchemy', 'PostgrSQL', 'nginx', 'uwsgi'],\n      \"Start\": \"01.01.2013\",\n      \"End\": \"01.01.2016\",\n      \"Description\": \"NTNUiDans.no er web portalen for studentgruppe som driver med dans under NTNUi paraplyen. Systemet er en web portal og CMS med administrasjons-side for h√•ndtering av innhold, arrangement, treninger, brukere, instrukt√∏rer, instrukt√∏r sertifisering og betaling av treningskontigent. Prosjektet var et kundestyrt bachelor-prosjekt hvor Kristian arbeidet i et team p√• 8 personer. Web portalen ble utviklet i rammeverket Flask i programmeringsspr√•ket Python. Betalingsl√∏sningen ble laget med rammeverket Stripe og databaselaget ble laget ved hjelp av SQLAlchemy og PostgreSQL. www.ntnuidans.no\"\n    },\n    {\n      \"CompanyName\": \"NTNUi Squash\",\n      \"ProjectName\": \"www.ntnuisquash.no\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['Python', 'Flask', 'javascript', 'SQL Alrchemy', 'PostgrSQL', 'nginx', 'uwsgi'],\n      \"Start\": \"01.09.2013\",\n      \"End\": \"01.08.2015\",\n      \"Description\": \"NTNUiSquash.no er portalen til studentgruppen som driver med Squash under NTNUi paraplyen. Systemet er ansvarlig for h√•ndtering av brukere, nyheter og reservering og p√•melding p√• ukentlige treninger. Nettsiden ble utviklet av Kristian mens han hadde verv som web ansvarlig i NTNUiSquash. Da den gamle nettsiden var gammel og utdatert, ble styret enige om at en ny nettside var n√∏dvendig. Nettsiden ble utviklet som et CMS, med administrasjonside for h√•ndtering av brukere, nyheter og treninger. For sluttbrukere ble nettsiden brukt til √• reservere ukentlige treninger for et semester i gangen, samt bekrefte oppm√∏te p√• disse treningene. Om oppm√∏te ikke er bekreftet 5 dager f√∏r treningdatoen blir den tilgjengelig for alle brukere, hvor den som melder seg p√• f√∏rst blir tildelt plassen for den enkelte treningen.\"\n    },\n    {\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (DIFI)\",\n      \"ProjectName\": \"Oppslagsverk for offentlige kunngj√∏ringer (Doffin)\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['elastic search', 'angular', 'java', 'spring boot', 'javascript'],\n      \"Start\": \"01.06.2014\",\n      \"End\": \"01.08.2014\",\n      \"Description\": \"ID-porten var en mobil applikasjon for Android som gjorde det mulig √• logge inn med ID-porten og lagre autentiseringen p√• mobilen p√• en sikker m√•te. Innloggingen kunne s√• bli brukt av andre applikasjoner p√• samme m√•te som man ofte bruker sin google eller facebook konto. F√∏r at innloggingen kunne huskes, krevde applikasjonen at mobilen m√•tte l√•ses med passord eller pin. Om ikke krevde applikasjonen innlogging for hvert bruk. Applikasjonen var en 'proof of concept' brukt for √• demonstrere sikkerheten bak en slik l√∏sning. Konseptet ble videre brukt til utvikling av AltInn appen.\"\n    },\n    {\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (DIFI)\",\n      \"ProjectName\": \"Oppslagsverk for offentlige kunngj√∏ringer (Doffin)\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['android', 'java', 'spring boot'],\n      \"Start\": \"01.06.2014\",\n      \"End\": \"01.08.2014\",\n      \"Description\": \"Doffin er et system for oppslag i den nasjonale kunngj√∏ringsdatabasen for offentlig anskaffelser. Systemet ble utviklet som en PoC i over en sommer av studenter ved Direktoratet for forvaltning og IKT (DIFI). Prosjektet ble utviklet med java backend, elasticsearch for s√∏king i oppslag og angular ble brukt til √• vise resultater frontend.\"\n    }\n  ],\n  \"education\": [\n    {\n      \"UniversityName\": \"Norges Teknisk-Naturvitenskapelige Universitet (NTNU)\",\n      \"specialization\": \"Master of Science (MSc), Informatikk, Kunstig Intelligens\",\n      \"MonthOfPassing\": \"Juni\",\n      \"YearOfPassing\": \"2017\",\n      \"Achievements\": \"Some Achievements\"\n    },\n    {\n      \"UniversityName\": \"Norges Teknisk-Naturvitenskapelige Universitet (NTNU)\",\n      \"specialization\": \"Bacelor of Science (BSc) Informatikk\",\n      \"MonthOfPassing\": \"Juni\",\n      \"YearOfPassing\": \"2015\",\n      \"Achievements\": \"Some Achievements\"\n    }\n  ],\n  \"work\": [\n    {\n      \"CompanyName\": \"Bouvet\",\n      \"specialization\": \"IT Konsulent\",\n      \"MonthOfLeaving\": \"Mai\",\n      \"YearOfLeaving\": \"2020\",\n      \"Achievements\": \"Gjennom sin jobb hos bouvet var Kristian utleid p√• flere prosjekter hos kunder som: Tine, Sproveien og Avinor\"\n    },\n    {\n      \"CompanyName\": \"Visma Software Autopay\",\n      \"specialization\": \"Systemutvikler\",\n      \"MonthOfLeaving\": \"Juni\",\n      \"YearOfLeaving\": \"2017\",\n      \"Achievements\": \"Kristian jobbet deltid hos Visma mens han studerte og fulltid p√• sommerne siden 2015.\"\n    },\n    {\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (Difi)\",\n      \"specialization\": \"Systemutvikler\",\n      \"MonthOfLeaving\": \"Juni\",\n      \"YearOfLeaving\": \"2014\",\n      \"Achievements\": \"Kristian jobbet hos Difi i et engasjement sommeren 2014.\"\n    }\n  ],\n  \"skillsDescription\": \"Your skills here\",\n  \"skills\": [\n    {\n      \"skillname\": \"HTML5\"\n    },\n    {\n      \"skillname\": \"CSS\"\n    },\n    {\n      \"skillname\": \"Reactjs\"\n    }\n  ],\n  \"portfolio\": [\n    {\n      \"name\": \"Verkt√∏y for trening og visualisering av modeller\",\n      \"description\": \"Optimalisering av Rangering og Dispatching av tbanevogner\",\n      \"imgurl\": \"images/portfolio/base-agent.gif\"\n    },\n    {\n      \"name\": \"AviKiosk\",\n      \"description\": \"Digitalt Infosenter for reisende p√• flyplass\",\n      \"imgurl\": \"images/portfolio/avinor-osl.png\"\n    },\n    {\n      \"name\": \"Rangeringsmodul\",\n      \"description\": \"Rangering av tbanevogner ved AI trent med reinforcement learning\",\n      \"imgurl\": \"images/portfolio/rl-sporveien6.gif\"\n    },\n    {\n      \"name\": \"NTNUi Squash\",\n      \"description\": \"CMS og medlemsside for NTNUi Squash\",\n      \"imgurl\": \"images/portfolio/ntnuisquash.png\"\n    },\n    {\n      \"name\": \"Optimalisering av parkering av tbanevogner\",\n      \"description\": \"Optimal parkering av tbanevogner\",\n      \"imgurl\": \"images/portfolio/genetic.png\"\n    },\n    {\n      \"name\": \"AviKiosk\",\n      \"description\": \"Digitalt Infosenter for reisende p√• flyplass\",\n      \"imgurl\": \"images/portfolio/avinor-trd.png\"\n    },\n    {\n      \"name\": \"NTNUi Dans\",\n      \"description\": \"Side for p√•melding, innhold og betaling for NTNUi Dans\",\n      \"imgurl\": \"images/portfolio/ntnuidans.png\"\n    }\n  ],\n  \"testimonials\": [\n    {\n      \"description\": \"This is a sample testimonial\",\n      \"name\": \"Some technical guy\"\n    },\n    {\n      \"description\": \"This is a sample testimonial\",\n      \"name\": \"Some technical guy\"\n    }\n  ]\n}\n\nexport default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactUs from './components/Contact';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}