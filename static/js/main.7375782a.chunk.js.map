{"version":3,"sources":["components/Header.js","components/About.js","components/Featured.js","components/Resume.js","components/Portfolio.js","components/Contact.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","resumeData","this","props","React","createElement","Fragment","id","className","href","title","src","alt","style","color","fontFamily","socialLinks","map","item","name","url","target","Component","About","FeatureListItem","_React$useState","useState","_React$useState2","_slicedToArray","expanded","setExpanded","expandCallback","useCallback","onClick","class","aria-hidden","description","Featured","featured","Name","Description","Resume","projects","version","ProjectName","CompanyName","Start","End","Roles","role","i","ProjectDescription","Contribution","Bullets","bullet","Tech","tech","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","MonthOfLeaving","YearOfLeaving","Porfolio","portfolio","concat","imgurl","ContactUs","Footer","App","Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7375782a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n      \r\n      <header id=\"home\">\r\n         <nav id=\"nav-wrap\">\r\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\r\n            <ul id=\"nav\" className=\"nav\">\r\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Hjem</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#about\">Om</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#featured\">Kompetanse</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#resume\">CV</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Portefølje</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#contact\">Kontakt</a></li>\r\n            </ul>\r\n         </nav>\r\n\r\n         <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n               <img className=\"banner-img\"  src=\"images/avatar.png\" alt=\"\" />\r\n               <h1 className=\"responsive-headline\">Kristian Ekle.</h1>\r\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>\r\n                Fullstackutvikler med skaperglede for software<br/>\r\n                Daglig leder / Senior IT-konsulent i Fyr Consulting AS.\r\n               </h3>\r\n               <hr/>\r\n               <ul className=\"social\">\r\n                  {\r\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\r\n                      return(\r\n                              <li key={item.name}>\r\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\r\n                              </li>\r\n                            )\r\n                          }\r\n                    )\r\n                  }\r\n               </ul>\r\n            </div>\r\n            <p>For tiden på pappaperm med Iben, ledig for nytt oppdrag september 2023</p>\r\n         </div>\r\n\r\n         <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n         </p>\r\n\r\n      </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n   render() {\n      let resumeData = this.props.resumeData;\n      return (\n         <section id=\"about\">\n            <div className=\"row\">\n\n               <div className=\"three columns\">\n                  <img className=\"profile-pic\" src=\"images/profile.jpg\" alt=\"\" />\n               </div>\n\n               <div className=\"nine columns main-col\">\n\n                  <h2>Om Kristian</h2>\n                  <p>\n                     Har en mastergrad i informatikk fra NTNU med spesialisering i kunstig intelligens.<br />\n                  </p>\n                  <p>\n                     Fullstackutvikler som har bred erfaring fra blant annet frontendrammeverk som React, Java, C# og Python.\n                     Jobber med alle lag i stacken og gjerne med features fra konsept til kjørende løsning.\n                <br></br> \n                <br></br>\n                    Tidligere kunder og kollegaer ville beskrevet Kristian som en selvdreven og allsidig utvikler som like gjerne jobber med frontend, backend, infrastruktur, ETL-pipelines eller skyteknologier i AWS eller Azure. For han er det viktig å levere gode, vedlikeholdbare løsninger som passer inn i eksisterende portefølje.\n                    Kristian liker godt å sette seg inn i nye teknologier og verktøy, og han bidrar ofte på arbeidsoppgaver som faller litt imellom to stoler for at teamet skal lykkes.\n                  <br></br>\n                  <br></br>\n\n                  Han opptatt av- og har erfaring i å jobbe tett sammen med foretningen for å utvikle løsninger som gir verdi for han kunder. I den forbindelse har Kristian erfaring med å jobbe brukersentrert i prosjekter med mye endring.\n                  </p>\n\n                  <div className=\"row\">\n\n                     <div className=\"columns contact-details\">\n\n                        <h2>Kontaktinformasjon</h2>\n                        <p className=\"address\">\n                           <span>Kristian Ekle</span>\n                           <br></br>\n                           <span>\n                              Oslo, Norge\n                           </span>\n                           <br></br>\n                           <span>kristian.ekle@gmail.com</span>\n                           <br></br>\n                        </p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </section>\n      );\n   }\n}","import React, { Component } from 'react';\r\n\r\nfunction FeatureListItem(props) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const expandCallback = React.useCallback(() => {\r\n    setExpanded(!expanded);\r\n  })\r\n\r\n    return (\r\n      <div className=\"feature\">\r\n        <div className=\"feature-title\">\r\n          <h6 onClick={expandCallback}>{props.name}</h6>\r\n          <i class={expanded? \"fa fa-caret-down\" : \"fa fa-caret-right\"} aria-hidden=\"true\"></i>\r\n        </div>\r\n        <p className={expanded ? 'expand' : 'collapse'}>{props.description}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default class Featured extends Component {\r\n\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n\r\n    return (\r\n      <section id=\"featured\">\r\n        <div className=\"row featured\">\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Fremhevet kompetanse</span></h1>\r\n          </div>\r\n\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {resumeData.featured && resumeData.featured.map((item) => {\r\n              return (\r\n                <FeatureListItem name={item.Name} description={item.Description}></FeatureListItem>\r\n                )\r\n              })}\r\n              <br/>\r\n              Mer utfyllende informasjon tilgjengelig i fullstendig CV, pdf <a href=\"CV_KristianEkle.pdf\">her</a>.\r\n          </div>\r\n\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nexport default class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"resume\">\r\n\r\n        <div className=\"row projects\">\r\n\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Prosjekter</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n\r\n            {\r\n              resumeData.projects && resumeData.projects.map((item) => {\r\n\r\n                // new resume version\r\n                if (item.version && item.version >= 2) {\r\n                  return (\r\n                    <div className=\"row item project\">\r\n                      <div className=\"twelve columns\">\r\n                        <h3 className=\"project-title\">{item.ProjectName}</h3>\r\n                        <p className=\"details\">\r\n                          <h5>{item.CompanyName}</h5>\r\n                          <em className=\"date\">{item.Start} <span>-</span> {item.End}</em>\r\n                        </p>\r\n                        <div className=\"project-roles\">\r\n                          {item.Roles.map((role, i) => <em className=\"project-role\">{role.Name}</em>)}\r\n                        </div>\r\n                        <p>\r\n                          {item.ProjectDescription}\r\n                        </p>\r\n\r\n                        <p>\r\n                          {item.Contribution}\r\n                        </p>\r\n\r\n                        {item.version === 3 ? (\r\n                          <>\r\n                          <h6>Bidrag</h6>\r\n                          <ul className='contributions'>\r\n                          {item.Bullets.map((bullet) => (\r\n                            <li>\r\n                              {bullet}\r\n                            </li>\r\n                            )\r\n                            )}\r\n                          </ul>\r\n                            </>\r\n                          ) : <></>}\r\n\r\n                        {item.Roles.map((role) => (\r\n                          <div>\r\n                            <h6>{role.Name}</h6>\r\n                            <p>\r\n                              {role.Description}\r\n                            </p>\r\n                          </div>\r\n                          )\r\n                        )}\r\n                        {item.Tech &&\r\n                          <div className=\"chips-dus\">\r\n                            {item.Tech.map((tech) => <div className=\"chip dus\">{tech}</div>)}\r\n                          </div>\r\n                        }\r\n                        {/*item.Roles &&\r\n                        <div className=\"chips\">\r\n                          {item.Roles.map((role) => <div className=\"chip\">{role}</div>)}\r\n                        </div>\r\n                        */}\r\n  \r\n                      </div>\r\n                    </div>\r\n                  )\r\n                }\r\n\r\n                // Old resume version\r\n                return (\r\n                  <div className=\"row item project\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3 className=\"project-title\">{item.ProjectName}</h3>\r\n                      <p className=\"details\">\r\n                        <h5>{item.CompanyName}</h5>\r\n                        <em className=\"date\">{item.Start} <span>-</span> {item.End}</em\r\n                        ></p>\r\n                      <p>\r\n                        {item.Description}\r\n                      </p>\r\n                      {item.Tech &&\r\n                        <div className=\"chips-dus\">\r\n                          {item.Tech.map((tech) => <div className=\"chip dus\">{tech}</div>)}\r\n                        </div>\r\n                      }\r\n                      {/*item.Roles &&\r\n                      <div className=\"chips\">\r\n                        {item.Roles.map((role) => <div className=\"chip\">{role}</div>)}\r\n                      </div>\r\n                      */}\r\n\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row education\">\r\n\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Utdannelse</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {\r\n              resumeData.education && resumeData.education.map((item) => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>{item.UniversityName}</h3>\r\n                      <p className=\"info\">\r\n                        {item.specialization}\r\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\r\n                      <p>\r\n                        {item.Achievements}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"row work\">\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Arbeid</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {\r\n              resumeData.work && resumeData.work.map((item) => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>{item.CompanyName}</h3>\r\n                      <p className=\"info\">\r\n                        {item.specialization}\r\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\r\n                      <p>\r\n                        {item.Achievements}\r\n                      </p>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/*}<div className=\"row skill\">\r\n\r\n          <div className=\"three columns header-col\">\r\n            <h1><span>Skills</span></h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n\r\n            <p>\r\n            {\r\n              resumeData.projects && resumeData.projects.map(\r\n                (item) => {item.tech && item.tech.map((t) => {t})}\r\n              )}\r\n            }\r\n            </p>\r\n\r\n            <div className=\"bars\">\r\n\r\n              <ul className=\"skills\">\r\n                {\r\n                  resumeData.skills && resumeData.skills.map((item) => {\r\n                    return (\r\n                      <li>\r\n                        <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\r\n                        </span><em>{item.skillname}</em>\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </ul>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n              </div>*/}\r\n\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class Porfolio extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"portfolio\">\r\n        <div className=\"row\">\r\n          <div className=\"twelve columns collapsed\">\r\n            <h1>Et utdrag av tidligere prosjekter.</h1>\r\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\r\n              {\r\n                resumeData.portfolio && resumeData.portfolio.map((item) => {\r\n                  return (\r\n                    <div className=\"columns portfolio-item\">\r\n                      <div className=\"item-wrap\">\r\n\r\n                        <img src={`${item.imgurl}`} className=\"item-img\" />\r\n                        <div className=\"overlay\">\r\n                          <div className=\"portfolio-item-meta\">\r\n                            <h5>{item.name}</h5>\r\n                            <p>{item.description}</p>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class ContactUs extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"contact\">\r\n          <div className=\"row section-head\">\r\n            <div className=\"ten columns\">\r\n              <p className=\"lead\">\r\n              Ta gjerne kontakt på epost eller på linkedin.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <aside className=\"eigth columns footer-widgets\">\r\n              <div className=\"widget\">\r\n                <h4><a href=\"mailto:kristian.ekle@fyrconsulting.no\">kristian.ekle@fyrconsulting.no</a>\r\n                </h4>\r\n              </div>\r\n            </aside>\r\n          </div>\r\n          <div className=\"row\">\r\n            <aside className=\"eigth columns footer-widgets\">\r\n              <div className=\"widget\">\r\n                <h4><a href=\"https://www.linkedin.com/in/kristian-ekle-3150836b/\">Linkedin</a>\r\n                </h4>\r\n              </div>\r\n            </aside>\r\n          </div>\r\n        </section>\r\n        );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <footer>\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <ul className=\"social-links\">\r\n            {\r\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\r\n                return(\r\n                  <li>\r\n                    <a href={item.url}>\r\n                    <i className={item.className} />\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          \r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\r\n      </div>\r\n    </footer>\r\n    );\r\n  }\r\n}","let resumeData = {\r\n  \"socialLinks\": [\r\n    {\r\n      \"name\": \"linkedin\",\r\n      \"url\": \"https://www.linkedin.com/in/kristian-ekle-3150836b/\",\r\n      \"className\": \"fa fa-linkedin\"\r\n    },\r\n    {\r\n      \"name\": \"github\",\r\n      \"url\": \"http://github.com/krekle\",\r\n      \"className\": \"fa fa-github\"\r\n    },\r\n    {\r\n      \"name\": \"cv\",\r\n      \"url\": \"CV_KristianEkle.pdf\",\r\n      \"className\": \"fa fa-file-pdf-o\"\r\n    }\r\n  ],\r\n  \"featured\": [\r\n    {\"Name\": \"JavaScript\", \"Description\": \"Mye erfaring med JavaScript fra utdannelse og i fra kundeprosjekter. God kontroll på rammeverk som React, Angular eller Express.js og bruk av for eksempel Webpack, npm, lintere og automatiserte tester.\"},\r\n    {\"Name\": \"Java\", \"Description\": \"Erfaring  i Java fra NTNU og hos Visma og Buypass. God kjennskap til Spring-Boot, for eksempel til å skrive mikrotjenester og backends med ulike formål, som APIer, autentisering, proxy, database, osv.\"},\r\n    {\"Name\": \"C# & .NET\", \"Description\": \"Jobbet tidligere i en C#/.NET avdeling i Bouvet og bidro mye til fagmiljøet rundt Azure og Microsoft-teknologier. Godt kjent med C#, .NET, nuget og Azure fra flere prosjekter hos Sporveien og Avinor. Har blant annet levert backend APIer, Windows services, samt kalkulasjoner i Azure Functions, med C# og .NET Core.\"},\r\n    {\"Name\": \"Python\", \"Description\": \"Har benyttet Python i flere prosjekter hos Sporveien; til maskinlæring og optimaliseringsoppgaver, APIer, samt kalkulasjoner i AWS Lamdas og Azure Functions. Han har også erfaring med Django, Flask og Bottle fra hobbyprosjekter og studietiden, blant annet for utvikling av nettsider til linjeforeningen/NTNUI-grupper. \"},\r\n    {\"Name\": \"Infrastruktur og CI/CD\", \"Description\": \"God kontroll på utvikling av CI/CD pipelines, enten via script i Jenkins, i Azure DevOps eller i GitLab pipelines. Tar ofte ansvar for deployment av applikasjoner og har erfaring med å produksjonssette løsninger on-prem eller i skyen med Docker/Kubernetes.\"},\r\n  ],\r\n  \"projects\": [\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Buypass\",\r\n      \"ProjectName\": \"Buypass FIDO2 Identity Services\",\r\n      \"ProjectDescription\": \"Buypass utviklet en løsning for sikker pålogging og brukerhåndtering på høyeste sikkerhetsnivå, eIDas høy, med FIDO2 teknologi. Løsningen blir nå brukt av flere kunder av Buypass i kommune-, farmasi- og helsesektor. Det er også mulig å bruke løsningen til pålogging av offentlige tjenester som Nav og Skatteetaten gjennom ID-porten.\",\r\n      \"Contribution\": \"Kristian jobbet med flere aspekter av Buypass FIDO2 Identity-løsningen, bl.a. infrastruktur, servicelag, og som hovedansvarlig for frontendapplikasjoner. Han utviklet flere applikasjoner og mikrotjenester i Spring-boot, selvbetjeningsløsninger, backofficeløsninger og påloggingsskjermer for bl.a. ID-porten i webteknologier og skrev Logstash pipelines som sendte meldinger fra Kafka til ElasticSearch. \",\r\n      \"Roles\": [\r\n        {'Name': 'Fullstackutvikler', 'Description': 'Som fullstackutvikler jobbet Kristian med alle lag i teknologistacken, han lagde apper i JavaScript og React, backend apier, mikroservices og MVC løsninger i Spring-Boot, samt docker/kubernetes og nginx filservere. Han jobbet også en del med eventer i kafka, logstash og elasticsearch til auditlogging og rapporter.'},\r\n        {'Name': 'Frontendansvarlig', 'Description': 'Kristian var ansvarlig for frontend i sitt team hos Buypass. I denne rollen utviklet han React applikasjoner, \"vanilla\" Javascript componenter i frontend for MVC løsninger og gjenbrukbare komponentbiblioteker i Web Components som resten av teamet kunne bruke. Han samarbeidet også mye med UX of forretning for å lage brukervennlige og estetiske skjermer. Han deltok også på frontendforum, som var et initiativ til samles rundt et felles designsystem laget i Figma, Storybook og React'}, \r\n      ],\r\n      \"Bullets\": [\r\n        'Skrev backendløsninger og mikrotjenester i Spring-Boot ',\r\n        'Utviklet webapper og selvbetjeningsløsninger i samråd med UX og forretning ',\r\n        'Deltok i løsningsdesign av eventsystem og multi-tenantversjon av FIDO2 identity services ',\r\n        'Skrev løsninger som publiserte, konsumerte, monitorerte og visualiserte events og auditlogs i Kafka ',\r\n        'Pilotprosjekt for deploying av applikasjoner til Kubernetes som senere ble adoptert  '\r\n      ],\r\n      \"Tech\": ['Web Components', 'Java', 'Spring-Boot', 'Spring security', 'OIDC', 'Fido2', 'Rancher', 'Docker', 'Kubernetes', 'typescript', 'LDAP', 'git', 'gitlab', 'gitlab-pipelines', 'CI/CD', 'Logstash', 'Elasticsearch', 'Kafka', 'Azure', 'Blob Storage', 'Nginx'],\r\n      \"Start\": \"01.09.2019\",\r\n      \"End\": \"01.05.2023\"\r\n    },\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Buypass\",\r\n      \"ProjectName\": \"Id-kontroll med digital passleser\",\r\n      \"ProjectDescription\": \"For å få utestedet en elektronisk ID er det nødvendig å gjennomføre en id-kontroll hvor en operatør gjør en kontroll av pass, dette krever fysisk oppmøte. Spesielt under korona-pandemien var det ønskelig med en løsning for remote id-kontroll. På oppdrag fra Digitaliseringsdirektoratet satte Buypass i gang med å lage en måte for brukere å autentisere seg mot offentlige tjenester gjennom en digital passleser.\",\r\n      \"Contribution\": \"Kristian ble engasjert av Buypass til å gå inn som fullstackutvikler i et team med mye kompetanse på sikkerhet og kryptografi, hvor han var ansvarlig for å utvikle en applikasjon i React for idkontroll av brukere og betaling, samt tilhørende API for pålogging med OIDC, kommunikasjon med backendtjenester og integrasjon mot Nets Passport Reader.\",\r\n      \"Bullets\": [\r\n        'Utviklet webapp i React for bestilling, id-verifikasjon og betaling av elektronisk id ',\r\n        'Skrev API og tjenester i Spring-Boot ',\r\n        'Lagde CI/CD pipelines og konfigurerte Docker, Docker-compose, traefik og nginx for deployment og sikkerhet '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Fullstackutvikler', 'Description': 'I denne rollen utviklet Kristian en webapplikajson med React frontend og backend i Spring-Boot. Applikasjonen gikk ut på å gjennomføre en id-kontroll av brukere for utstedelse av elektronisk id. Kristian samarbeidet med et kryssfaglig team til å lage en app som brukte integrasjon mot folkeregisteret og en app fra .Nets som leser data fra moderne pass til å gjennomføre en biometrisk id-kontroll. Kristian var også ansvarlig for å integrere mot betalingsløsning etter gjennomført kontroll. Han samarbeidet direkte med UX-ansvarlig iterativt for å gjøre applikajsonene estetiske og brukervennlige.'}, \r\n      ],\r\n      \"Tech\": ['React', 'Java', 'Spring-Boot', 'Rancher', 'Docker', 'Docker-compose', 'TypeScript', 'JavaScript', 'OIDC', 'git', 'gitlab', 'gitlab-pipelines'],\r\n      \"Start\": \"01.05.2020\",\r\n      \"End\": \"01.09.2020\",\r\n      \r\n    },\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Avinor\",\r\n      \"ProjectName\": \"Digitalt Infosenter / InfoKiosk\",\r\n      \"ProjectDescription\": \"Avinor et behov for å bistå de ansatte ved informasjonsskrankene på sine flyplasserog så at de mest stilte spørsmålene kunne løses digitalt, det ville redusere ressursbehovet ved informasjonsskrankene.  Kristian var del av team som skulle løse dette problemet, første fase var å sette opp en digital informasjonskiosk for Oslo Lufthavn. I prosjektets fase 2 ble løsningen utrullet på andre norske flyplasser. \",\r\n      \"Contribution\": \"Kristian jobbet i et lite smidig team bestående av tre utviklere og en designer som beveget seg hurtig, med hypping feedback fra kunde og sluttbrukere. Løsningen bestod av webapplikasjoner i React, backend i C# ASP. NET Core og brukte flere tjenester fra Azure til pålogging, datapersistering, og deployment.\",\r\n      \"Bullets\": [\r\n        'Utviklet av infokiosk i React med touchstøtte, med bl.a. kart, rutetider og artikkelsystem ',\r\n        'Utviklet backofficeløsning i React med mulighet for å redigere innhold i infokiosk per fysiske enhet, med friteksteditering i Markdown ',\r\n        'CI/CD pipelines og konfigurasjon av Docker for deployment til Azure Kubernetes ',\r\n        'CI/CD pipeline som provisjonerte nødvendig infrastrukture i Azure infrastructure as code (IaC) ',\r\n        'Bidro også til utplukking av hardware, 3D-printing og oppsett av den fysiske infokiosken '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Fullstackutvikler', 'Description': \"Kristian jobbet med implementering av løsningen basert på kundens spesifikasjon i samarbeid med UX. Han kodet i alle lagene av løsningen: Database, C#, React og i Azure. Han jobbet med resten av teamt i å utarbeide systemarkitektur og design av applikasjonene.\"}, \r\n      ],\r\n      \"Tech\": ['React', 'C#', 'ASP.NET Core', 'Azure', 'Azure DevOps', 'CosmosDB', 'GraphQL', 'Typescript', 'JavaScript', 'git', 'CI/CD', 'Docker', 'Kubernetes'],\r\n      \"Start\": \"01.10.2019\",\r\n      \"End\": \"01.05.2020\",\r\n    },\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Sporveien\",\r\n      \"ProjectName\": \"Geometritoget\",\r\n      \"ProjectDescription\": \"Geometritoget er en t-banevogn utstyrt med over 30 sensorer som måler verdier for blant annet sporvidde, kurve, vindskjevhet, akselerometer, m.m. Toget vil ved normal bruk dekke hele spornettet per 2 uker. Sporveien etablerte et lite team for å hente ned, dekode og analysere denne dataen med ønske om å kunne si noe om vedlikeholdsbehov til spornettet. Dataen fra geometritoget skal gjøre det mulig for de som er ansvarlige for vedlikehold av infrastrukturen i Sporveien å se på trending av feil, få varsel dersom en sensor fanger opp målinger som er utenfor terskelverdier, samt se på gjennomsnittlige hastigheter på hele skinnenettet. \",\r\n      \"Contribution\": \"Kristian ble engasjert i dette prosjektet som eneste tekniske ressurs. Han var ansvarlig for løsningsdesign og implementering av softwareløsningen for systemet, og utviklet ulike tjenester for dataprosessering på servere og i sky for å dekode, transformere og overføre data til ulike systemer.\",\r\n      \"Bullets\": [\r\n        'Skrev tjenester i C# services som overførte sensordata fra toget over 4g-nettet til AWS S3',\r\n        'Benyttet Python for å konvertere sensordata fra et proprietært binærsystem brukt av sensorleverandør ',\r\n        'Skrev og satt opp AWS Lambdas til å agere på events til å transformere data  ',\r\n        'Utviklet ETL pipelines i Databricks mot AWS DynamoDB og AWS Redshift til prosessering av store datamengder ',\r\n        'Utarbeidet løsningsdesign for systemets arkitektur som ble presentert og akseptert i Arkitekturforum ',\r\n        'Besøkte jevnlig verkstedhallen for å feilsøke systemet på vognen '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Fullstackutvikler', 'Description': \"Som eneste utvikler jobbet Kristian med alle ledd av teknologistacken. Han utviklet services og script i C# og AWS Lambda som konverterte, lastet og arkiverte spordata i AWS S3 og Redshift, skrev ETL prosedyrer i databricks som transformerte data. Tilgjengeliggjorde data for rapporter i Tableau og skrev frontendløsninger i Angular\"}, \r\n        {'Name': 'Arkitekt', 'Description': \"En del av prosjektet var å designe systemet med utgangspunkt i Sporveiens eksisterende infrastruktur og tjenesteportefølje, for å få en smidig handover ved ferdigstillelse. Kristian designet dette systemet og presenterte det for Sporveiens 'arkitektur forum' og øvrige forretning for godkjennelse før det ble videreutviklet.\"}, \r\n      ],\r\n      \"Tech\": ['C#', 'AWS', 'IoT', 'git', 'Python', 'Tableau', 'AWS Redshift', 'AWS S3', 'AWS Lambda', 'Databricks', 'PySpark', 'Big Data', 'Datavarehus', 'Angular', 'TypeScript'],\r\n      \"Start\": \"01.12.2018\",\r\n      \"End\": \"01.01.2020\",\r\n    },\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Sporveien\",\r\n      \"ProjectName\": \"Prediktivt vedlikehold av Sporvekslere\",\r\n      \"ProjectDescription\": \"Sporveien kjøpte og installerte nye sporvekslere med en sensor for måling og rapportering av nøyaktig strømforbruk med høy oppløsning. Planen var å undersøke om det var mulig å predikere vedlikeholdsbehov basert på denne dataen. \",\r\n      \"Contribution\": \"Kristian ble engasjert for å prototype en løsning som kunne bruke denne dataen til å analysere, visualisere og varsle dersom loggførte strømtrekk på sporvekslinger i t-banenettet er utenom det vanlige og tilsa at det var behov for vedlikehold. Som eneste utvikler på prosjektet utviklet han en løsning med Angular7 og Python Flask backend for visualisering servert fra Azure. Analyse og databehandling ble gjort i WebJobs, Azure Function, Blob storage og Azure CosmosDB. \",\r\n      \"Bullets\": [\r\n        'Skrev C#-kode kjørt i Azure Functions og WebJobs som brukte algoritmer fra signalbehandling og statistikk til å analysere sporvekslinger ',\r\n        'Utviklet system i Azure Functions som varslet dersom vekslinger var utenfor normalen ',\r\n        'Utviklet webapp for visualiseringer, deployet i CI/CD pipelines til Azure ',\r\n        'Besøkte sporskinner for å lage data til scenarioer hvor sporvekling feilet '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Fullstackutvikler', 'Description': \"Som utvikler var Kristian ansvarlig for å utvikle og sette opp de ulike elementene i løsningen i Python, C#, Angular og i Azure. For å predikere behovet for vedlikehold brukte Kristian algoritmer fra signalbehandling samt AI/ML til å analysere data. Han var også ute i 'felten' for å se på sporvekslere og lage treningsdata for algoritmene. Resultatet ble visualisert i en frontend skrevet i Angular, og det ble utsendt varslinger fra Azure på potensielle vedlikeholdsbehov.\"}, \r\n      ],\r\n      \"Tech\": ['Python', 'C#', 'Azure', 'Azure CosmosDB', 'Azure Blobstorage', 'Azure Function', 'Angular', 'typescript', 'git'],\r\n      \"Start\": \"01.10.2018\",\r\n      \"End\": \"01.03.2019\",\r\n    },\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Sporveien\",\r\n      \"ProjectName\": \"IVO - Individstyring av Vognparken\",\r\n      \"ProjectDescription\": \"Håndtering og bestilling av t-banevogner for regelstyrt ettersyn ved T-baneverkstedet på Ryen i Oslo er en kompleks manuell oppgave. Denne oppgaven involverer ekspertise innen domenet, da t-banevognene må inn til ettersyn basert på ulike vedlikeholdsbehov som kan skyldes både tidsforløp og kjørte kilometer. Av økonomiske hensyn er det ønskelig å maksimere antall kilometer en vogn kan kjøre før ettersyn, da ubrukte kilometer representerer betydelige kostnader over vognens levetid. Dette er en utfordrende oppgave grunnet den komplekse kombinasjonen av faktorer som påvirker en vogns tilstand, inkludert rutevalg, parkeringsstruktur, uforutsett vedlikehold og rengjøring.  Prosjektet kalt IVO (Individstyring av vognparken), hvor et forprosjekt ble etablert for å utforske muligheten for å utvikle digitale verktøy for å optimalisere planleggingen av ettersyn og styringen av t-banevogner. Kristian ble engasjert som utvikler og data scientist, for å undersøke om AI/ML-teknikker kunne løse denne utfordringen. Forprosjektet resulterte i en Proof of Concept (PoC) som dannet grunnlaget for fremtidige prosjektforslag og patentsøknad.\",\r\n      \"Contribution\": \"Kristian jobbet med flere alle delene av systemet, og var i lengre tid eneste utvikler på prosjektet. Problemet viste seg å være svært komplekst og det ble oppdelt i flere subproblemer som ble løst av skreddersydde optimaliseringsrutiner skrevet som Evolusjonære algoritmer i Python og reinforcementlærning i Tensorflow. Videre jobbet han med integrasjoner mot kjernesystemer for å hente ut nødvendig informasjon som kilometerstand og ruteplan.\",\r\n      \"Bullets\": [\r\n        'Skrev evolusjonære algoritmer i Python for å utarbeide ruteallokering for å treffe optimale verksteddatoer ',\r\n        'Utviklet “et spill” av reglene for rangering på depot og brukte reinforcement learning til å trene modeller som lærte seg å rangere tog på for å treffe allokert rutevalg. Modellene ble trent ved å \"spille\" over lengre tid i AWS EC2 ',\r\n        'Holdt presentasjoner om systemet på Make data smart Again ',\r\n        'Skrev rapporter og utarbeidet arkitektur for fullskala prosjekt som ble brukt til patentsøknad ',\r\n        'Flere besøk på t-banehallen for å forstå domenet ',\r\n        'Tkinter GUI for visualisering av modeller mens de rangerer vogner '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Fullstackutvikler', 'Description': \"Han jobbet med å utvikle modeller for IVO, itegrasjoner mot kildedata og oppsett av server samt CI/CD mot maskinjer i amazon. Videre jobbet han med datamodeller og optimeringsalgoritmer for løsningen. I en iterativ prosess bidro Kristian til å utvikle og teste hypoteser og modeller.\"}, \r\n        {'Name': 'Arkitekt', 'Description': \"Som Arkitekt jobbet han med å identiﬁsere nødvendige komponenter for IVO, utarbeiding av arkitekturskisser og estimering av prosjektets omfang i timer og personell. Gjennom en forberedende fase mellom proof-of-concept og utviklingsløp jobbet Kristian med å koordinere valg av teknologi og plattform med tanke på prosjektets og kundes behov. \"}, \r\n      ],\r\n      \"Tech\": ['Python', 'Reinforcement Learning', 'Genetisk Algoritme', 'DEAP', 'Ray', 'Azure DevOps', 'AWS EC2', 'git'],\r\n      \"Start\": \"01.09.2017\",\r\n      \"End\": \"01.10.2018\",\r\n    },\r\n\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Tine\",\r\n      \"ProjectName\": \"TineMatsans Chatbot\",\r\n      \"ProjectDescription\": \"I forbindelse med videreutvikling av nettsiden og oppskriftsdatabasen til Tines var det ønskelig å se om det var mulig å bruke ChatBot-teknologi til å lage en smart chat bot som kunne interagere med kunder for å foreslå matoppskrifter fra oppskriftsdatabasen, smartsans, basert på deres preferanser og tilgjengelige ingredienser.\",\r\n      \"Contribution\": \"Kristian ble engasjer som utvikler for å jobbe på en PoC (Proof of concept) som gikk ut på å koble Microsoft Bot Framework opp mot deler av samme backend og database som oppskriftsnettsiden brukte. Botten ble deployet på Azure og kunne integreres med ulike klienter, som Slack, Skype eller på nettsider. Prosjektet var vellykket og TINE valgte å gå videre med chatboten.\",\r\n      \"Bullets\": [\r\n        'Brukte og deployet chatbot laget i Microsoft BotFramework trent med dialoger trent i wit.ai  ',\r\n        'Hentet oppskrifter og bildeinfo fra GraphQL som kunne vises i chat-dialogen '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Fullstackutvikler', 'Description': \"Som utvilkler jobbet Kristian med integrasjoner mot nødvendig kildedata i GraphQL, oppsett av Bot Framework og design av card som ble brukt til å visualisere oppskrifter i chat-dialogene.\"}, \r\n      ],\r\n      \"Tech\": ['node.js', 'GraphQL', 'Microsoft Bot Framework', 'javascript', 'git'],\r\n      \"Start\": \"01.08.2017\",\r\n      \"End\": \"01.09.2017\",\r\n    },\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Visma\",\r\n      \"ProjectName\": \"Visma Autopay\",\r\n      \"ProjectDescription\": \"AutoPay er en helautomatisk betalingstjeneste som tar hånd om alle inn- og utgående betalinger for et ubegrenset antall kunder. Alle kunder som økonomisystem fra Visma kan benytte Visma AutoPay for automatisk transport av betalingsdata begge veier mellom regnskapsprogram og datamottaker (for eksempel BBS, DnB NOR, Nordea eller Fokus Bank).\",\r\n      \"Contribution\": \"Kristian jobbet som utvikler i AutoPay i et team på 8-12 personer, han starter sin rolle der som sommer-student som skulle se på modernisering av frontend-løsningen og bakenforliggende api med Angular.js. Det ble besluttet å gå videre med angular som ny løsning for frontend og Kristian fortsatte å jobbe hos Autopay med implementering av ny frontend ved siden av studiene på NTNU til han ble uteksaminert.\",\r\n      \"Bullets\": [\r\n        'Gjennomførte en suksessfull PoC av ny frontend i Angular  ',\r\n        'Implementering av ny frontend og tilhørende API som tok over for Java MVC-løsning '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Utvikler', 'Description': \"Som utvikler jobbet Kristian med frontend i Angualr.js og bakenforliggende API i Java JSF\"}, \r\n      ],\r\n      \"Tech\": ['Java EE', 'JavaServer Faces', 'Angular.js', 'Karma', 'Jasmin', 'Javascript', 'Java', 'Jenkins', 'SVN', 'Selenium'],\r\n      \"Start\": \"01.06.2015\",\r\n      \"End\": \"01.06.2017\",\r\n    },\r\n    {\r\n      \"version\": 3,\r\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (DIFI)\",\r\n      \"ProjectName\": \"Doffin-data, eLæring i staten, App for ID-porten eID\",\r\n      \"ProjectDescription\": \"Direktoratet for forvaltning og ikt (Difi) tar hvert år inn sommerstudenter med relevant pågående utdannelse i fra data-linjer på universiter og høyskoler i Norge til “Dificamp”.  Dificamp gir utviklerne i difi ekstra kapasitet til å teste ut nye teknologi eller til å jobbe med løsninger som det ellers ikke er tid til. \",\r\n      \"Contribution\": \"Kristian jobbet sommeren 2014 hos Difi i Leikanger. Han jobbet på tre forskjellige applikasjoner og systemer i løpet av 2 måneder; 'E-læringsplatform i PHP Moodle for kurs og elæring til bruk i staten', 'Indeksering og tilgjengeliggjøring av Doffin-data (data over offentlig anbud) i Elasticsearch og Spring boot' og 'Android app for inkludering av ID-porten MinId som en eID'\",\r\n      \"Bullets\": [\r\n        'Utviklet egne plugins til eLæringsplatforment moodle for utstedelse av diplom/verifikasjon etter gjennomført kurs ',\r\n        'Indeksering av 10år med doffindata i Elasticsearch som ble tilgjengeligjort med api i Spring-Boot ',\r\n        'Utviklet PoC for ID-porten eID på Android som lagret autentisert bruker etter pålogging med ID-Porten '\r\n      ],\r\n      \"Roles\": [\r\n        {'Name': 'Utvikler', 'Description': \"Som utvikler jobbet Kristian alle lagene i de forskjellige løsningene. SpringBoot backends, Android applikasjoner og infrastrukturoppgaver i Elasticsearch\"}, \r\n      ],\r\n      \"Tech\": ['elastic search', 'angular', 'java', 'spring boot', 'javascript', 'android', 'java', 'spring boot', 'PHP', 'git', 'HTML/CSS'],\r\n      \"Start\": \"01.06.2014\",\r\n      \"End\": \"01.08.2014\",\r\n      \"Description\": \"ID-porten var en mobil applikasjon for Android som gjorde det mulig å logge inn med ID-porten og lagre autentiseringen på mobilen på en sikker måte. Innloggingen kunne så bli brukt av andre applikasjoner på samme måte som man ofte bruker sin google eller facebook konto. Før at innloggingen kunne huskes, krevde applikasjonen at mobilen måtte låses med passord eller pin. Om ikke krevde applikasjonen innlogging for hvert bruk. Applikasjonen var en 'proof of concept' brukt for å demonstrere sikkerheten bak en slik løsning. Konseptet ble videre brukt til utvikling av AltInn appen.\"\r\n    },\r\n    {\r\n      \"CompanyName\": \"NTNUi Dans\",\r\n      \"ProjectName\": \"www.ntnuisdans.no\",\r\n      \"Roles\": ['Utvikler'],\r\n      \"Tech\": ['Python', 'Flask', 'javascript', 'SQL Alrchemy', 'PostgrSQL', 'nginx', 'uwsgi'],\r\n      \"Start\": \"01.01.2013\",\r\n      \"End\": \"01.01.2016\",\r\n      \"Description\": \"NTNUiDans.no er web portalen for studentgruppe som driver med dans under NTNUi paraplyen. Systemet er en web portal og CMS med administrasjons-side for håndtering av innhold, arrangement, treninger, brukere, instruktører, instruktør sertifisering og betaling av treningskontigent. Prosjektet var et kundestyrt bachelor-prosjekt hvor Kristian arbeidet i et team på 8 personer. Web portalen ble utviklet i rammeverket Flask i programmeringsspråket Python. Betalingsløsningen ble laget med rammeverket Stripe og databaselaget ble laget ved hjelp av SQLAlchemy og PostgreSQL. www.ntnuidans.no\"\r\n    },\r\n    {\r\n      \"CompanyName\": \"NTNUi Squash\",\r\n      \"ProjectName\": \"www.ntnuisquash.no\",\r\n      \"Roles\": ['Utvikler'],\r\n      \"Tech\": ['Python', 'Flask', 'javascript', 'SQL Alrchemy', 'PostgrSQL', 'nginx', 'uwsgi'],\r\n      \"Start\": \"01.09.2013\",\r\n      \"End\": \"01.08.2015\",\r\n      \"Description\": \"NTNUiSquash.no er portalen til studentgruppen som driver med Squash under NTNUi paraplyen. Systemet er ansvarlig for håndtering av brukere, nyheter og reservering og påmelding på ukentlige treninger. Nettsiden ble utviklet av Kristian mens han hadde verv som web ansvarlig i NTNUiSquash. Da den gamle nettsiden var gammel og utdatert, ble styret enige om at en ny nettside var nødvendig. Nettsiden ble utviklet som et CMS, med administrasjonside for håndtering av brukere, nyheter og treninger. For sluttbrukere ble nettsiden brukt til å reservere ukentlige treninger for et semester i gangen, samt bekrefte oppmøte på disse treningene. Om oppmøte ikke er bekreftet 5 dager før treningdatoen blir den tilgjengelig for alle brukere, hvor den som melder seg på først blir tildelt plassen for den enkelte treningen.\"\r\n    }\r\n  ],\r\n  \"education\": [\r\n    {\r\n      \"UniversityName\": \"Norges Teknisk-Naturvitenskapelige Universitet (NTNU)\",\r\n      \"specialization\": \"Master of Science (MSc), Informatikk, Kunstig Intelligens\",\r\n      \"MonthOfPassing\": \"Juni\",\r\n      \"YearOfPassing\": \"2017\",\r\n      \"Achievements\": \"Some Achievements\"\r\n    },\r\n    {\r\n      \"UniversityName\": \"Norges Teknisk-Naturvitenskapelige Universitet (NTNU)\",\r\n      \"specialization\": \"Bacelor of Science (BSc) Informatikk\",\r\n      \"MonthOfPassing\": \"Juni\",\r\n      \"YearOfPassing\": \"2015\",\r\n      \"Achievements\": \"Some Achievements\"\r\n    }\r\n  ],\r\n  \"work\": [\r\n    {\r\n      \"CompanyName\": \"Fyr Consulting\",\r\n      \"specialization\": \"IT Konsulent og Daglig leder\",\r\n      \"MonthOfLeaving\": \"Mai\",\r\n      \"YearOfLeaving\": \"2020\",\r\n      \"Achievements\": \"Gjennom sitt arbeid som it-konsulten i Fyr Consulting er Kristian på prosjekt hos Buypass\"\r\n    },\r\n    {\r\n      \"CompanyName\": \"Bouvet\",\r\n      \"specialization\": \"IT Konsulent\",\r\n      \"MonthOfLeaving\": \"Mai\",\r\n      \"YearOfLeaving\": \"2020\",\r\n      \"Achievements\": \"Gjennom sin jobb hos bouvet var Kristian utleid på flere prosjekter hos kunder som: Tine, Sporveien og Avinor\"\r\n    },\r\n    {\r\n      \"CompanyName\": \"Visma Software Autopay\",\r\n      \"specialization\": \"Systemutvikler\",\r\n      \"MonthOfLeaving\": \"Juni\",\r\n      \"YearOfLeaving\": \"2017\",\r\n      \"Achievements\": \"Kristian jobbet deltid hos Visma mens han studerte og fulltid på sommerne siden 2015.\"\r\n    },\r\n    {\r\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (Difi)\",\r\n      \"specialization\": \"Systemutvikler\",\r\n      \"MonthOfLeaving\": \"Juni\",\r\n      \"YearOfLeaving\": \"2014\",\r\n      \"Achievements\": \"Kristian jobbet hos Difi i et engasjement sommeren 2014.\"\r\n    }\r\n  ],\r\n  \"portfolio\": [\r\n    {\r\n      \"name\": \"Verktøy for visualisering av potensielle feil på spornettet\",\r\n      \"description\": \"Verktøy for visualisering av potensielle feil på spornettet\",\r\n      \"imgurl\": \"images/portfolio/geofeil.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"Verktøy for trening og visualisering av modeller\",\r\n      \"description\": \"Optimalisering av Rangering og Dispatching av tbanevogner\",\r\n      \"imgurl\": \"images/portfolio/base-agent.gif\"\r\n    },\r\n    {\r\n      \"name\": \"AviKiosk\",\r\n      \"description\": \"Digitalt Infosenter for reisende på flyplass\",\r\n      \"imgurl\": \"images/portfolio/avinor-osl.png\"\r\n    },\r\n    {\r\n      \"name\": \"Rangeringsmodul\",\r\n      \"description\": \"Rangering av tbanevogner ved AI trent med reinforcement learning\",\r\n      \"imgurl\": \"images/portfolio/rl-sporveien6.gif\"\r\n    },\r\n    {\r\n      \"name\": \"Overvåkning av sensordata\",\r\n      \"description\": \"Overvåkning av sporgeometri for tbanenettet\",\r\n      \"imgurl\": \"images/portfolio/geometri.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"NTNUi Squash\",\r\n      \"description\": \"CMS og medlemsside for NTNUi Squash\",\r\n      \"imgurl\": \"images/portfolio/ntnuisquash.png\"\r\n    },\r\n    {\r\n      \"name\": \"NTNUi Dans\",\r\n      \"description\": \"Side for påmelding, innhold og betaling for NTNUi Dans\",\r\n      \"imgurl\": \"images/portfolio/ntnuidans.png\"\r\n    },\r\n    {\r\n      \"name\": \"Prediktiv vedlikehold av Sporvekslere\",\r\n      \"description\": \"Analyse og varsling av feil på sporvekslere\",\r\n      \"imgurl\": \"images/portfolio/psv.jpg\"\r\n    },\r\n    {\r\n      \"name\": \"Pålogging med Buypass Identity & passordløs FIDO2-teknologi hos Altinn\",\r\n      \"description\": \"Påloggingsskjerm som bruker Buypass Identity & passordløs FIDO2-teknologi \",\r\n      \"imgurl\": \"images/portfolio/bpaltinn.png\"\r\n    },\r\n  ]\r\n}\r\n\r\nexport default resumeData","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Featured from './components/Featured';\r\nimport Resume from './components/Resume';\r\nimport Portfolio from './components/Portfolio';\r\nimport ContactUs from './components/Contact';\r\nimport Footer from './components/Footer';\r\nimport resumeData from './resumeData';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header resumeData={resumeData}/>\r\n        <About resumeData={resumeData}/>\r\n        <Featured resumeData={resumeData}/>\r\n        <Resume resumeData={resumeData}/>\r\n        <Portfolio resumeData={resumeData}/>\r\n        <ContactUs resumeData={resumeData}/>\r\n        <Footer resumeData={resumeData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}