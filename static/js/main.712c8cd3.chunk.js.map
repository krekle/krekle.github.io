{"version":3,"sources":["components/Header.js","components/About.js","components/Featured.js","components/Resume.js","components/Portfolio.js","components/Contact.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","resumeData","this","props","React","createElement","Fragment","id","className","href","title","src","alt","style","color","fontFamily","socialLinks","map","item","name","url","target","Component","About","FeatureListItem","_React$useState","useState","_React$useState2","_slicedToArray","expanded","setExpanded","expandCallback","useCallback","onClick","description","Featured","featured","Name","Description","Resume","projects","version","ProjectName","CompanyName","Start","End","Roles","role","ProjectDescription","Contribution","Tech","tech","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","MonthOfLeaving","YearOfLeaving","Porfolio","portfolio","concat","imgurl","ContactUs","Footer","App","Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.712c8cd3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Hjem</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">Om</a></li>\n               <li><a className=\"smoothscroll\" href=\"#featured\">Kompetanse</a></li>\n               <li><a className=\"smoothscroll\" href=\"#resume\">CV</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Portefølje</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Kontakt</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <img className=\"banner-img\"  src=\"images/avatar.png\" alt=\"\" />\n               <h1 className=\"responsive-headline\">Kristian Ekle.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>\n                Fullstackutvikler med skaperglede for software<br/>\n                Daglig leder / Senior IT-konsulent i Fyr Consulting AS.\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n            <p>For tiden på pappaperm med Iben, ledig for nytt oppdrag September 2023</p>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n   render() {\n      let resumeData = this.props.resumeData;\n      return (\n         <section id=\"about\">\n            <div className=\"row\">\n\n               <div className=\"three columns\">\n                  <img className=\"profile-pic\" src=\"images/profile.jpg\" alt=\"\" />\n               </div>\n\n               <div className=\"nine columns main-col\">\n\n                  <h2>Om Kristian</h2>\n                  <p>\n                     Har en mastergrad i informatikk fra NTNU med spesialisering i kunstig intelligens.<br />\n                  </p>\n                  <p>\n                     Fullstackutvikler med bred erfaring fra blant annet java, python og c#, samt Angular og React.\n                     Jobber med alle lag i stacken og gjerne med features fra konsept til kjørende løsning.\n                <br></br> \n                <br></br>\n                    Tidligere kunder og kollegaer ville beskrevet Kristian som en selvdreven og allsidig utvikler som like gjerne jobber med frontend, backend, infrastruktur, ETL-pipelines eller skyteknologier i AWS eller Azure. For han er det viktig å levere gode, vedlikeholdbare løsninger som passer inn i eksisterende portefølje.\n                    Kristian liker godt å sette seg inn i nye spennende teknologier og verktøy, han rekker gjerne opp hånden dersom det kreves at noe nytt læres eller utforskes for at teamet skal lykkes.\n                  <br></br>\n                  <br></br>\n\n                  Han opptatt av- og har erfaring i å jobbe tett sammen med foretningen for å utvikle løsninger som gir verdi for han kunder. I den forbindelse har Kristian erfaring med å jobbe brukersentrert i prosjekter med mye endring.\n                  </p>\n\n                  <div className=\"row\">\n\n                     <div className=\"columns contact-details\">\n\n                        <h2>Kontaktinformasjon</h2>\n                        <p className=\"address\">\n                           <span>Kristian Ekle</span>\n                           <br></br>\n                           <span>\n                              Oslo, Norge\n                           </span>\n                           <br></br>\n                           <span>kristian.ekle@gmail.com</span>\n                           <br></br>\n                        </p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </section>\n      );\n   }\n}","import React, { Component } from 'react';\n\nfunction FeatureListItem(props) {\n  const [expanded, setExpanded] = React.useState(false);\n  const expandCallback = React.useCallback(() => {\n    setExpanded(!expanded);\n  })\n\n    return (\n      <div className=\"feature\">\n        <h6 onClick={expandCallback}>{props.name}</h6>\n        <p className={expanded ? 'expand' : 'collapse'}>{props.description}</p>\n      </div>\n    )\n  }\n\n\nexport default class Featured extends Component {\n\n  render() {\n    let resumeData = this.props.resumeData;\n\n    return (\n      <section id=\"featured\">\n        <div className=\"row featured\">\n          <div className=\"three columns header-col\">\n            <h1><span>Fremhevet kompetanse</span></h1>\n          </div>\n\n\n          <div className=\"nine columns main-col\">\n            {resumeData.featured && resumeData.featured.map((item) => {\n              return (\n                <FeatureListItem name={item.Name} description={item.Description}></FeatureListItem>\n                )\n              })}\n              <br/>\n              Klikk for å se detaljer. <br/>\n              Mer utfyllende informasjon tilgjengelig i fullstendig CV, pdf <a href=\"CV_KristianEkle.pdf\">her</a>.\n          </div>\n\n        </div>\n      </section>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n        <div className=\"row projects\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Prosjekter</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n\n            {\n              resumeData.projects && resumeData.projects.map((item) => {\n\n                // new resume version\n                if (item.version && item.version == 2) {\n                  return (\n                    <div className=\"row item project\">\n                      <div className=\"twelve columns\">\n                        <h3 className=\"project-title\">{item.ProjectName}</h3>\n                        <p className=\"details\">\n                          <h5>{item.CompanyName}</h5>\n                          <em className=\"date\">{item.Start} <span>&bull;</span> {item.End}</em>\n                        </p>\n                        <div className=\"project-roles\">\n                          {item.Roles.map((role) => <em className=\"project-role\">{role.Name}</em>)}\n                        </div>\n                        <p>\n                          {item.ProjectDescription}\n                        </p>\n\n                        <p>\n                          {item.Contribution}\n                        </p>\n\n                        {item.Roles.map((role) => (\n                          <div>\n                            <h6>{role.Name}</h6>\n                            <p>\n                              {role.Description}\n                            </p>\n                          </div>\n                          )\n                        )}\n                        {item.Tech &&\n                          <div className=\"chips-dus\">\n                            {item.Tech.map((tech) => <div className=\"chip dus\">{tech}</div>)}\n                          </div>\n                        }\n                        {/*item.Roles &&\n                        <div className=\"chips\">\n                          {item.Roles.map((role) => <div className=\"chip\">{role}</div>)}\n                        </div>\n                        */}\n  \n                      </div>\n                    </div>\n                  )\n                }\n\n                // Old resume version\n                return (\n                  <div className=\"row item project\">\n                    <div className=\"twelve columns\">\n                      <h3 className=\"project-title\">{item.ProjectName}</h3>\n                      <p className=\"details\">\n                        <h5>{item.CompanyName}</h5>\n                        <em className=\"date\">{item.Start} <span>&bull;</span> {item.End}</em\n                        ></p>\n                      <p>\n                        {item.Description}\n                      </p>\n                      {item.Tech &&\n                        <div className=\"chips-dus\">\n                          {item.Tech.map((tech) => <div className=\"chip dus\">{tech}</div>)}\n                        </div>\n                      }\n                      {/*item.Roles &&\n                      <div className=\"chips\">\n                        {item.Roles.map((role) => <div className=\"chip\">{role}</div>)}\n                      </div>\n                      */}\n\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n\n        <div className=\"row education\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Utdannelse</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.education && resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                      <p>\n                        {item.Achievements}\n                      </p>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>Arbeid</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.work && resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                      <p>\n                        {item.Achievements}\n                      </p>\n                    </div>\n\n                  </div>\n\n                )\n              })\n            }\n          </div>\n        </div>\n\n\n        {/*}<div className=\"row skill\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Skills</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n\n            <p>\n            {\n              resumeData.projects && resumeData.projects.map(\n                (item) => {item.tech && item.tech.map((t) => {t})}\n              )}\n            }\n            </p>\n\n            <div className=\"bars\">\n\n              <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return (\n                      <li>\n                        <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                        </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n              </ul>\n\n            </div>\n\n          </div>\n\n              </div>*/}\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Et utdrag av tidligere prosjekter.</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n              {\n                resumeData.portfolio && resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n\n                        <img src={`${item.imgurl}`} className=\"item-img\" />\n                        <div className=\"overlay\">\n                          <div className=\"portfolio-item-meta\">\n                            <h5>{item.name}</h5>\n                            <p>{item.description}</p>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Ta gjerne kontakt på epost eller på linkedin.\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4><a href=\"mailto:kristian.ekle@fyrconsulting.no\">kristian.ekle@fyrconsulting.no</a>\n                </h4>\n              </div>\n            </aside>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4><a href=\"https://www.linkedin.com/in/kristian-ekle-3150836b/\">Linkedin</a>\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  \"socialLinks\": [\n    {\n      \"name\": \"linkedin\",\n      \"url\": \"https://www.linkedin.com/in/rahul-bhatia-67ba08121/\",\n      \"className\": \"fa fa-linkedin\"\n    },\n    {\n      \"name\": \"github\",\n      \"url\": \"http://github.com/krekle\",\n      \"className\": \"fa fa-github\"\n    },\n    {\n      \"name\": \"cv\",\n      \"url\": \"CV_KristianEkle.pdf\",\n      \"className\": \"fa fa-file-pdf-o\"\n    }\n  ],\n  \"featured\": [\n    {\"Name\": \"Java\", \"Description\": \"Kristian har erfaring med Java fra sin tid på NTNU og i sitt arbeid hos Visma og Buypass AS. Han har god kjennskap til SpringBoot, som han blant annet har brukt til å skrive mange mikrotjenester og frontends med ulike formål og mekanismer som APIer, autentisering, proxy, database, osv.\"},\n    {\"Name\": \"JavaScript\", \"Description\": \"Kristian har mye erfaring med JavaScript fra utdannelsen og flere kundeprosjekter. Blant annet i form av frontendrammeverk som React eller Angular, og i utviklingsmiljø som bruker teknologi og byggverktøy som TypeScript, npm, lintere og automatiserte tester.\"},\n    {\"Name\": \"C# & .NET\", \"Description\": \"Kristian jobbet tidligere i en C#/.NET avdeling i Bouvet og bidro mye til fagmiljøet rundt Azure og Microsoft-teknologier. Han er godt kjent med C#, .NET, nuget og Azure fra flere tidligere prosjekter hos Sporveien og Avinor. Han har blant annet levert løsninger til backend APIer, Windows services, samt kalkulasjoner i Azure Functions, med C# og .NET core.\"},\n    {\"Name\": \"Python\", \"Description\": \"Kristian har brukt Python i flere prosjekter hos Sporveien; til maskinlæring og optimaliseringsoppgaver, APIer og kalkulasjoner i AWS Lamdas og Azure Functions. Han har også erfaring med Django, Flask og Bottle til hobbyprosjekter og fra studietiden, blant annet for utvikling av nettsider til linjeforeningen/NTNUI-grupper.\"},\n    {\"Name\": \"Infrastruktur og CI/CD\", \"Description\": \"I de fleste prosjektene Kristian har vært en del av har han hatt ansvaret for eller bidratt i utvikling av CI/CD pipelines, enten via script i Jenkins, i Azure DevOps eller i GitLab pipelines. Han tar ofte ansvar for deployment av applikasjoner og har erfaring med å prodsette løsninger on-prem eller i skyen med Docker/Kubernetes\"},\n  ],\n  \"projects\": [\n    {\n      \"CompanyName\": \"Buypass\",\n      \"ProjectName\": \"Buypass Identity Fido2 og brukerhåndtering for kommune, helse og farmasisektoren\",\n      \"ProjectDescription\": \"Buypass er et norsk selskap som tilbyr blant annet betaling og tillitstjenester som autentisering og brukerhåndtering. Fido2 er en ny standard for passordløs autentisering på web. Buypass leverer en løsning for autentisering og brukerhåndtering hvor man kan bruke en fysisk nøkkel til å logge på systemer. Løsningen er levert hos flere kunder i kommune- helse- og farmasisektoren. Løsningen gjør det mulig feks logge på statlige tjenester via med FIDO2-nøkkel via ID-porten\",\n      \"Roles\": [\n        {'Name': 'Frontendansvarlig', 'Description': 'Kristian var ansvarlig for frontend i sitt team hos Buypass. I denne rollen utviklet han React applikasjoner, \"vanilla\" Javascript componenter i frontend for MVC løsninger og gjenbrukbare komponentbiblioteker i Web Components som resten av teamet kunne bruke. Han samarbeidet også mye med UX of forretning for å lage brukervennlige og estetiske skjermer. Han deltok også på frontendforum, som var et initiativ til samles rundt et felles designsystem laget i Figma, Storybook og React'}, \n        {'Name': 'Fullstackutvikler', 'Description': 'Som fullstackutvikler jobbet Kristian med alle lag i teknologistacken, han lagde apper i JavaScript og React, backend apier, mikroservices og MVC løsninger i Spring-Boot, samt docker/kubernetes og nginx filservere. Han jobbet også en del med eventer i kafka, logstash og elasticsearch til auditlogging og rapporter.'},\n      ],\n      \"Contribution\": \"Kristian jobbet som utvikler av systemet, han jobbet primært på web applikasjoner for styring av fido2-nøkler, personalia og id-kontroll av personell. Men og en del med event systemet som sendte meldinger over kafka til logstash og videre til elasticsearch. Meldingene ble brukt til rapportering og fakturering. Han bidro også med produksjonsetting, konfigureringg og monitorering av løsningene\",\n      \"Tech\": ['Web Components', 'Java', 'Spring-Boot', 'Spring security', 'OIDC', 'Fido2', 'Rancher', 'Docker', 'Kubernetes', 'typescript', 'LDAP', 'git', 'gitlab', 'gitlab-pipelines', 'CI/CD', 'Logstash', 'Elasticsearch', 'Kafka', 'Azure', 'Blob Storage', 'Nginx'],\n      \"Start\": \"01.09.2019\",\n      \"End\": \"01.05.2023\",\n      \"version\": 2\n    },\n    {\n      \"CompanyName\": \"Buypass\",\n      \"ProjectName\": \"Id-kontroll med digital passleser\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['React', 'Java', 'Spring-Boot', 'Rancher', 'Docker', 'Docker-compose', 'typescript', 'OIDC', 'git', 'gitlab', 'gitlab-pipelines'],\n      \"Start\": \"01.05.2020\",\n      \"End\": \"01.09.2020\",\n      \"Description\": \"Buypass er et norsk selskap som tilbyr blant annet betaling og tillitstjenester som autentisering og brukerhåndtering. Løsningen for digital id-kontroll ble laget på bestilling fra digitaliserings direktoratet som et alternativ til fysisk oppmøte, som var relevant under covid19 pandemien. Kristian jobbet som utvikler med ansvar for web-klient og api-laget for løsningen. Løsningen ble brukt som alternativ autentiseringsinstrument på feks nav.no.\"\n    },\n    {\n      \"CompanyName\": \"Avinor\",\n      \"ProjectName\": \"Digitalt Infosenter / InfoKiosk\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['React', 'C#', '.NET Core', 'Azure', 'Azure DevOps', 'GraphQL', 'typescript', 'git'],\n      \"Start\": \"01.10.2019\",\n      \"End\": \"01.05.2020\",\n      \"Description\": \"Avinor er et norsk statlig selskap, og Norges største eier av flyplasser. Selskapet driver 44 flyplasser, hvorav 12 eies av Forsvaret. I tillegg eier selskapet sikkerhetsinstallasjoner av ulike slag, deriblant radarer, radiofyr, fjernstyrte basestasjoner for flyradiosambandet, og kontrollsentraler. I 2003 ble Avinor oppført som aksjeselskap heleid av staten. Eierskapet forvaltes av Samferdselsdepartementet. Etter hvert som Norge blir et mer og mer populært reisemål, har det økende antallet turister til Oslo lufthavn hver sommer blitt en stor belastning for de ansatte ved informasjonssenteret i ankomsthallen. Denne trenden fortsetter, blant annet fordi et kinesisk flyselskap åpner en rute første gang direkte fra Beijing til Oslo fra midten av mai. Dette har gjort det nødvendig å endre informasjonssenteret for å kunne håndtere flere turister raskere. Etter en innsiktsundersøkelse så vi at de mest stilte spørsmålene kan løses digitalt, som kan frigjøre tid og senke stressnivået for både besøkende og ansatte. Bouvet dannet et team for å løse disse utfordringene, der første fase var å sette opp en informasjons-kiosk for Oslo Lufthavn. I prosjektets fase 2 rulles løsningen ut på andre norske flyplasser. Kristian har vært med på design og utvikling av systemet..\"\n    },\n    {\n      \"CompanyName\": \"Sporveien\",\n      \"ProjectName\": \"Geometritoget\",\n      \"Roles\": ['Utvikler', 'Arkitekt'],\n      \"Tech\": ['C#', 'AWS', 'IoT', 'git', 'Python', 'Tableau', 'AWS Redshift', 'AWS S3', 'AWS Lambda', 'Databricks', 'PySpark', 'Big Data', 'Datavarehus', 'Angular', 'typescript'],\n      \"Start\": \"01.12.2018\",\n      \"End\": \"01.01.2020\",\n      \"Description\": \"Geometritoget er en MX3000 t-banevogn som er utstyrt med over 30 sensorer som måler verdier for blant annet: sporvidde, kurve, vindskjevhet, akselerometer, etc. Toget nyttes som en vanlig t-banevogn som i løpet av en tidsperiode på ca 2 uker vil kjøre alle tbanenettets linjer mens det samler data om sporgeometrien til sporet. Kristian var ansvarlig for design og implementering av softwareløsningen for dette systemet. Dataen fra toget måtte konverteres fra et proprietært binærformat som leverandør av sensorer benyttet til noe mer standard som kunne analyseres og visualiseres. Videre måtte dataen arkiveres i skyen S3 og DynamoDB og berikes og analyseres før innsetting i Redshift databarehus, fra hvor den til slutt ble tilgjengeligjort i analyseverktøyet tableua web. Dataen fra geometritoget skal gjøre det mulig for de som er ansvarlige for vedlikehold av infrastrukturen i Sporveien å; se på trending av feil, få varsel dersom en sensor fanger opp målinger som er utenfor terskelverdier, se på gjennomsnittlige hastigheter på hele skinnenettet. Blant annet.\"\n    },\n    {\n      \"CompanyName\": \"Sporveien\",\n      \"ProjectName\": \"Prediktivt vedlikehold av Sporvekslere\",\n      \"Roles\": ['Utvikler', 'Arkitekt'],\n      \"Tech\": ['Python', 'C#', 'Azure', 'Azure CosmosDB', 'Azure Blobstorage', 'Azure Function', 'Angular', 'typescript', 'git'],\n      \"Start\": \"01.10.2018\",\n      \"End\": \"01.03.2019\",\n      \"Description\": \"Vedlikehold av infrastruktur i drift krever mye penger og tid. Å gjennomføre for mange unødvendige vedlikehold koster mye penger - for få vedlikehold fører kostbar svikt av utstyr i operasjon. Det er derfor ønskelig med støttesystemer som kan monitorere utsyr og varsle når vedlikehold er nødvendig. I den forbindelse har Kristian jobbet på prosjekt hos Sporveien for å prototype en løsning som kan visualisere og varsle dersom loggførte strømtrekk på sporvekslinger i t-banenettet er utenom det vanlige. Dette gjøres ved å benytte algoritmer fra signalbehandling og statistikk til å se på kurven til strømtrekket for å avgjøre hvorvidt den representerer en 'frisk' veksling eller ikke. Løsningen er laget med Angular7 og Python Flask backend for visualisering og grensesnitt servert fra Azure. Analyse og databehandling gjøres i WebJobs, Azure Function, Blob storage og Azure CosmosDB.\"\n    },\n    {\n      \"CompanyName\": \"Sporveien\",\n      \"ProjectName\": \"IVO - Individstyring av Vognparken\",\n      \"Roles\": ['Utvikler', 'Arkitekt'],\n      \"Tech\": ['Python', 'Reinforcement Learning', 'Genetisk Algoritme', 'DEAP', 'Ray', 'Azure DevOps', 'AWS EC2', 'git'],\n      \"Start\": \"01.09.2017\",\n      \"End\": \"01.10.2018\",\n      \"Description\": \"Individstyring av vognparken (IVO) er system for planlegging av ettersyn, flåtestyring og rangering for t-banevogner i drift og på depot for Sporveien. Målsetningen med løsningen er å bedre treffe ettersynsdatoer for å unngå tapte penger ved ubrukte kilometer. IVO startet som en del av prosjekt DRIV, som siden oppstarten høsten 2015 har DRIV-prosjektet utviklet flere informasjonsløsninger som benyttes på T-banens hovedverksted og oppstillingsplass på Ryen. Kort fortalt gir løsningene informasjon om hvor en vogn befinner seg, i hvilken tilstand den er i og hva som skal skje med vogna. DRIV arbeider etter Lean Startup-metodikken med tett brukerdialog og -involvering, hypotesedrevet eksperimentering, iterativ utvikling og evaluering direkte på verkstedsgulvet. Prototyping skal sikre høy nytteverdi og god forankring blant ledere og brukere på verkstedet, redusere risiko og minimere behovet for store forhåndsinvesteringer. IVO (Individstyring av vognparken) er et system som skal bistå de ansatte på sporveien med å planlegge ettersyn og styre t-banevogner slik at man får bedre kontroll på kilometerpåløpet mellom ettersyn. IVO er et system som består av 2 kjernekomponenter: Verkstedplan Er sansvarlig for å optimalisere verkstedplanen og gi vogner daglige kilometer-måltall som de må kjøre for å treffe verkstedtiden sin. Verkstedplan bruker genetiske algoritmer for å lage optimale planer. Utviklet i python med rammeverket Deap. Rangering Assistent Bruker data om utgående ruter og innkommende vogner til å anbefale parkering, forflytning og utkjøring på depot slik at vogner treffer sine kilometer måltall og dermed treffer sine oppsatte verkstedtider. Bruker reinforcement learning til å trene opp modeller. Utviklet i python med rammeverkene tensorflow og ray. Disse komponentene utgjør den operative delen av IVO, i tillegg er det er omkringliggende system bestående av integrasjoner mot kildesystemer, api'er som gjør data tilgjengelig for eksterne systemer og en database hvor resultater fra kjernekomponenter blir lagret og kildedata blir beriket ved å aggregere data fra flere kilder.\"\n    },\n\n    {\n      \"CompanyName\": \"Tine\",\n      \"ProjectName\": \"TineMatsans Chatbot\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['node.js', 'GraphQL', 'Microsoft Bot Framework', 'javascript', 'git'],\n      \"Start\": \"01.08.2017\",\n      \"End\": \"01.09.2017\",\n      \"Description\": \"Det er utviklet og leverte et proof of concept på en chatbot til TINE. Chatboten gir middagsforslag basert på ingredienser en ønsker eller har fra før. Løsningen ble levert på Microsoft Bot Framework, slik at vi enkelt kunne integrere med ulike chat klienter som Slack, Skype eller direkte på en nettside. Prosjektet var et eksperiment og TINE valgte å gå videre med chatbot ideen. \"\n    },\n    {\n      \"CompanyName\": \"Visma\",\n      \"ProjectName\": \"Visma Autopay\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['Java EE', 'JavaServer Faces', 'Angular.js', 'Karma', 'Jasmin', 'Javascript', 'Java', 'Jenkins', 'SVN', 'Selenium'],\n      \"Start\": \"01.06.2015\",\n      \"End\": \"01.06.2017\",\n      \"Description\": \"AutoPay er en helautomatisk betalingstjeneste som tar hånd om all inn- og utgående betalinger for et ubegrenset antall kunder. Alle kunder som benytter Visma Business Regnskapsbyra kan benytte Visma AutoPay for automatisk transport av betalingsdata begge veier mellom regnskapsprogram og datamottaker (for eksempel BBS, DnB NOR, Nordea eller Fokus Bank).\"\n    },\n    {\n      \"CompanyName\": \"NTNUi Dans\",\n      \"ProjectName\": \"www.ntnuisdans.no\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['Python', 'Flask', 'javascript', 'SQL Alrchemy', 'PostgrSQL', 'nginx', 'uwsgi'],\n      \"Start\": \"01.01.2013\",\n      \"End\": \"01.01.2016\",\n      \"Description\": \"NTNUiDans.no er web portalen for studentgruppe som driver med dans under NTNUi paraplyen. Systemet er en web portal og CMS med administrasjons-side for håndtering av innhold, arrangement, treninger, brukere, instruktører, instruktør sertifisering og betaling av treningskontigent. Prosjektet var et kundestyrt bachelor-prosjekt hvor Kristian arbeidet i et team på 8 personer. Web portalen ble utviklet i rammeverket Flask i programmeringsspråket Python. Betalingsløsningen ble laget med rammeverket Stripe og databaselaget ble laget ved hjelp av SQLAlchemy og PostgreSQL. www.ntnuidans.no\"\n    },\n    {\n      \"CompanyName\": \"NTNUi Squash\",\n      \"ProjectName\": \"www.ntnuisquash.no\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['Python', 'Flask', 'javascript', 'SQL Alrchemy', 'PostgrSQL', 'nginx', 'uwsgi'],\n      \"Start\": \"01.09.2013\",\n      \"End\": \"01.08.2015\",\n      \"Description\": \"NTNUiSquash.no er portalen til studentgruppen som driver med Squash under NTNUi paraplyen. Systemet er ansvarlig for håndtering av brukere, nyheter og reservering og påmelding på ukentlige treninger. Nettsiden ble utviklet av Kristian mens han hadde verv som web ansvarlig i NTNUiSquash. Da den gamle nettsiden var gammel og utdatert, ble styret enige om at en ny nettside var nødvendig. Nettsiden ble utviklet som et CMS, med administrasjonside for håndtering av brukere, nyheter og treninger. For sluttbrukere ble nettsiden brukt til å reservere ukentlige treninger for et semester i gangen, samt bekrefte oppmøte på disse treningene. Om oppmøte ikke er bekreftet 5 dager før treningdatoen blir den tilgjengelig for alle brukere, hvor den som melder seg på først blir tildelt plassen for den enkelte treningen.\"\n    },\n    {\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (DIFI)\",\n      \"ProjectName\": \"Oppslagsverk for offentlige kunngjøringer (Doffin)\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['elastic search', 'angular', 'java', 'spring boot', 'javascript'],\n      \"Start\": \"01.06.2014\",\n      \"End\": \"01.08.2014\",\n      \"Description\": \"ID-porten var en mobil applikasjon for Android som gjorde det mulig å logge inn med ID-porten og lagre autentiseringen på mobilen på en sikker måte. Innloggingen kunne så bli brukt av andre applikasjoner på samme måte som man ofte bruker sin google eller facebook konto. Før at innloggingen kunne huskes, krevde applikasjonen at mobilen måtte låses med passord eller pin. Om ikke krevde applikasjonen innlogging for hvert bruk. Applikasjonen var en 'proof of concept' brukt for å demonstrere sikkerheten bak en slik løsning. Konseptet ble videre brukt til utvikling av AltInn appen.\"\n    },\n    {\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (DIFI)\",\n      \"ProjectName\": \"Oppslagsverk for offentlige kunngjøringer (Doffin)\",\n      \"Roles\": ['Utvikler'],\n      \"Tech\": ['android', 'java', 'spring boot'],\n      \"Start\": \"01.06.2014\",\n      \"End\": \"01.08.2014\",\n      \"Description\": \"Doffin er et system for oppslag i den nasjonale kunngjøringsdatabasen for offentlig anskaffelser. Systemet ble utviklet som en PoC i over en sommer av studenter ved Direktoratet for forvaltning og IKT (DIFI). Prosjektet ble utviklet med java backend, elasticsearch for søking i oppslag og angular ble brukt til å vise resultater frontend.\"\n    }\n  ],\n  \"education\": [\n    {\n      \"UniversityName\": \"Norges Teknisk-Naturvitenskapelige Universitet (NTNU)\",\n      \"specialization\": \"Master of Science (MSc), Informatikk, Kunstig Intelligens\",\n      \"MonthOfPassing\": \"Juni\",\n      \"YearOfPassing\": \"2017\",\n      \"Achievements\": \"Some Achievements\"\n    },\n    {\n      \"UniversityName\": \"Norges Teknisk-Naturvitenskapelige Universitet (NTNU)\",\n      \"specialization\": \"Bacelor of Science (BSc) Informatikk\",\n      \"MonthOfPassing\": \"Juni\",\n      \"YearOfPassing\": \"2015\",\n      \"Achievements\": \"Some Achievements\"\n    }\n  ],\n  \"work\": [\n    {\n      \"CompanyName\": \"Fyr Consulting\",\n      \"specialization\": \"IT Konsulent og Daglig leder\",\n      \"MonthOfLeaving\": \"Mai\",\n      \"YearOfLeaving\": \"2020\",\n      \"Achievements\": \"Gjennom sitt arbeid som it-konsulten i Fyr Consulting er Kristian på prosjekt hos Buypass\"\n    },\n    {\n      \"CompanyName\": \"Bouvet\",\n      \"specialization\": \"IT Konsulent\",\n      \"MonthOfLeaving\": \"Mai\",\n      \"YearOfLeaving\": \"2020\",\n      \"Achievements\": \"Gjennom sin jobb hos bouvet var Kristian utleid på flere prosjekter hos kunder som: Tine, Sporveien og Avinor\"\n    },\n    {\n      \"CompanyName\": \"Visma Software Autopay\",\n      \"specialization\": \"Systemutvikler\",\n      \"MonthOfLeaving\": \"Juni\",\n      \"YearOfLeaving\": \"2017\",\n      \"Achievements\": \"Kristian jobbet deltid hos Visma mens han studerte og fulltid på sommerne siden 2015.\"\n    },\n    {\n      \"CompanyName\": \"Direktoratet for forvaltning og IKT (Difi)\",\n      \"specialization\": \"Systemutvikler\",\n      \"MonthOfLeaving\": \"Juni\",\n      \"YearOfLeaving\": \"2014\",\n      \"Achievements\": \"Kristian jobbet hos Difi i et engasjement sommeren 2014.\"\n    }\n  ],\n  \"skillsDescription\": \"Your skills here\",\n  \"skills\": [\n    {\n      \"skillname\": \"HTML5\"\n    },\n    {\n      \"skillname\": \"CSS\"\n    },\n    {\n      \"skillname\": \"Reactjs\"\n    }\n  ],\n  \"portfolio\": [\n    {\n      \"name\": \"Verktøy for visualisering av potensielle feil på spornettet\",\n      \"description\": \"Verktøy for visualisering av potensielle feil på spornettet\",\n      \"imgurl\": \"images/portfolio/geofeil.jpg\"\n    },\n    {\n      \"name\": \"Verktøy for trening og visualisering av modeller\",\n      \"description\": \"Optimalisering av Rangering og Dispatching av tbanevogner\",\n      \"imgurl\": \"images/portfolio/base-agent.gif\"\n    },\n    {\n      \"name\": \"AviKiosk\",\n      \"description\": \"Digitalt Infosenter for reisende på flyplass\",\n      \"imgurl\": \"images/portfolio/avinor-osl.png\"\n    },\n    {\n      \"name\": \"Rangeringsmodul\",\n      \"description\": \"Rangering av tbanevogner ved AI trent med reinforcement learning\",\n      \"imgurl\": \"images/portfolio/rl-sporveien6.gif\"\n    },\n    {\n      \"name\": \"Overvåkning av sensordata\",\n      \"description\": \"Overvåkning av sporgeometri for tbanenettet\",\n      \"imgurl\": \"images/portfolio/geometri.jpg\"\n    },\n    {\n      \"name\": \"NTNUi Squash\",\n      \"description\": \"CMS og medlemsside for NTNUi Squash\",\n      \"imgurl\": \"images/portfolio/ntnuisquash.png\"\n    },\n    {\n      \"name\": \"NTNUi Dans\",\n      \"description\": \"Side for påmelding, innhold og betaling for NTNUi Dans\",\n      \"imgurl\": \"images/portfolio/ntnuidans.png\"\n    },\n    {\n      \"name\": \"Prediktiv vedlikehold av Sporvekslere\",\n      \"description\": \"Analyse og varsling av feil på sporvekslere\",\n      \"imgurl\": \"images/portfolio/psv.jpg\"\n    },\n    {\n      \"name\": \"Pålogging med Buypass Identity & passordløs FIDO2-teknologi hos Altinn\",\n      \"description\": \"Påloggingsskjerm som bruker Buypass Identity & passordløs FIDO2-teknologi \",\n      \"imgurl\": \"images/portfolio/bpaltinn.png\"\n    },\n  ]\n}\n\nexport default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Featured from './components/Featured';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactUs from './components/Contact';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Featured resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}